// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  fullName      String
  imageUrl      String?
  phoneNumber   String?
  referralCode  String?       @unique
  referredUsers Referral[]    @relation("UserReferrals") // Relation to users referred by this user
  referrals     Referral[] // Referrals where this user was the referee
  subscription  Subscription?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  role          String
  Record        Record[]
}

model Referral {
  id         String   @id @default(uuid())
  referrerId String
  referrer   User     @relation("UserReferrals", fields: [referrerId], references: [id], onDelete: Cascade) // Link to referrer
  refereeId  String
  referee    User     @relation(fields: [refereeId], references: [id]) // Link to referee
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Subscription {
  id        String   @id @default(uuid())
  userId    String   @unique // Relating to the User model's id (String type)
  status    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Ensure subscription is deleted if user is deleted
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  amount    String   @default("0")
}

model Record {
  id        String   @id @default(uuid())
  userId    String
  name      String
  user      User     @relation(fields: [userId], references: [id])
  amount    String
  type      String
  imageUrl  String?
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  trial
  active
  expired
}
